{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\ueditor.js"
    ],
    "names": [],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\ueditor.js",
    "sourcesContent": [
        "'use strict';\r\n\r\nimport Base from './base.js';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nexport default class extends Base {\r\n  config;\r\n\r\n  init(...args) {\r\n    super.init(...args);\r\n  }\r\n\r\n  /**\r\n   * index action\r\n   * @return {Promise} []\r\n   */\r\n  async indexAction() {\r\n    //auto render template file index_index.html\r\n    this.config = this.config(\"ueditor\");\r\n    let action = this.get(\"action\");\r\n    think.log(action);\r\n    let result;\r\n    switch (action) {\r\n      case 'config':\r\n        result = this.config;\r\n\r\n        break;\r\n\r\n      /* 上传图片 */\r\n      case 'uploadimage':\r\n      /* 上传涂鸦 */\r\n      case 'uploadscrawl':\r\n      /* 上传视频 */\r\n      case 'uploadvideo':\r\n      /* 上传文件 */\r\n      case 'uploadfile':\r\n\r\n        result = this.uploads();\r\n        //console.log(result);\r\n        break;\r\n\r\n      /* 列出图片 */\r\n      case 'listimage':\r\n      /* 列出文件 */\r\n      case 'listfile':\r\n        result = this.uploadlist();\r\n        break;\r\n\r\n      /* 抓取远程文件 */\r\n      case 'catchimage':\r\n        result = await this.crawler();\r\n        break;\r\n\r\n      default:\r\n        result = {\r\n          state: '请求地址出错'\r\n        };\r\n\r\n        break;\r\n    }\r\n    //返回结果\r\n    this.jsonp(result);\r\n\r\n  }\r\n\r\n  uploads() {\r\n    /**\r\n     * 得到上传文件所对应的各个参数,数组结构\r\n     * obj={\r\n     *     \"state\" : \"\",          //上传状态，上传成功时必须返回\"SUCCESS\"\r\n     *     \"url\" : \"\",            //返回的地址\r\n     *     \"title\" : \"\",          //新文件名\r\n     *     \"original\" : \"\",       //原始文件名\r\n     *     \"type\" : \"\" ,           //文件类型\r\n     *     \"size\" : \"\",           //文件大小\r\n     * }\r\n     */\r\n    let action = this.get(\"action\");\r\n    let base64 = \"upload\";\r\n    let config = {};\r\n    let fieldName;\r\n\r\n    switch (action) {\r\n      case 'uploadimage':\r\n        config = {\r\n          pathFormat: this.config['imagePathFormat'],\r\n          maxSize: this.config['imageMaxSize'],\r\n          allowFiles: this.config['imageAllowFiles']\r\n        };\r\n        fieldName = this.config['imageFieldName'];\r\n        break;\r\n      case 'uploadscrawl':\r\n        config = {\r\n          \"pathFormat\": this.config['scrawlPathFormat'],\r\n          \"maxSize\": this.config['scrawlMaxSize'],\r\n          \"allowFiles\": this.config['scrawlAllowFiles'],\r\n          \"oriName\": \"scrawl.png\"\r\n        };\r\n        fieldName = this.config['scrawlFieldName'];\r\n        base64 = \"base64\";\r\n        break;\r\n      case 'uploadvideo':\r\n        config = {\r\n          \"pathFormat\": this.config['videoPathFormat'],\r\n          \"maxSize\": this.config['videoMaxSize'],\r\n          \"allowFiles\": this.config['videoAllowFiles']\r\n        };\r\n        fieldName = this.config['videoFieldName'];\r\n        break;\r\n      case 'uploadfile':\r\n      default:\r\n        config = {\r\n          \"pathFormat\": this.config['filePathFormat'],\r\n          \"maxSize\": this.config['fileMaxSize'],\r\n          \"allowFiles\": this.config['fileAllowFiles']\r\n        };\r\n        fieldName = this.config['fileFieldName'];\r\n        break;\r\n    }\r\n    //return self.uploader(fieldName, config, oriName, size, path, base64);\r\n    let up = think.adapter(\"editor\", \"ueditor\"); //加载名为 ueditor 的 editor Adapter\r\n    let upload = new up(fieldName, config, base64, this.http); //实例化 Adapter\r\n\r\n    return upload.getFileInfo();\r\n  }\r\n\r\n  //抓取远程图片\r\n  async crawler() {\r\n    /* 上传配置 */\r\n    let config = {\r\n      \"pathFormat\": this.config['catcherPathFormat'],\r\n      \"maxSize\": this.config['catcherMaxSize'],\r\n      \"allowFiles\": this.config['catcherAllowFiles'],\r\n      \"oriName\": \"remote.png\"\r\n    };\r\n    let fieldName = this.config['catcherFieldName'];\r\n    let source = this.post(fieldName + \"[]\");\r\n    if (think.isArray(source)) {\r\n      source = source;\r\n    } else {\r\n      source = [source];\r\n    }\r\n    let list = [];\r\n    for (let imgUrl of source) {\r\n      let up = think.adapter(\"editor\", \"ueditor\"); //加载名为 ueditor 的 editor Adapter\r\n      let upload = new up(imgUrl, config, \"remote\"); //实例化 Adapter\r\n      let info = await upload.saveRemote();\r\n      //console.log(info);\r\n      list.push({\r\n        \"state\": \"SUCCESS\",\r\n        \"url\": info.url,\r\n        \"size\": 431521,\r\n        \"title\": info.title,\r\n        \"original\": info.original,\r\n        \"source\": imgUrl\r\n      });\r\n    }\r\n    //console.log(think.isEmpty(list));\r\n    return {\r\n      state: !think.isEmpty(list) ? 'SUCCESS' : 'ERROR',\r\n      list: list\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取已上传的文件列表\r\n   */\r\n  uploadlist() {\r\n    var allowFiles, listSize, path;\r\n    //判断类型\r\n    switch (this.get(\"action\")) {\r\n      //列出文件\r\n      case 'listfile':\r\n        allowFiles = this.config['fileManagerAllowFiles'];\r\n        listSize = this.config['fileManagerListSize'];\r\n        path = this.config['fileManagerListPath'];\r\n        break;\r\n      //列出图片\r\n      case 'listimage':\r\n      default:\r\n        allowFiles = this.config['imageManagerAllowFiles'];\r\n        listSize = this.config['imageManagerListSize'];\r\n        path = this.config['imageManagerListPath'];\r\n    }\r\n    //allowFiles = allowFiles.join(\"\").replace(/[.]/g,\"|\").substr(1);\r\n    /* 获取参数 */\r\n    var size = this.get('size') ? this.get('size') : listSize;\r\n    var start = this.get('start') ? this.get('start') : 0;\r\n    var end = parseInt(size) + parseInt(start);\r\n    /* 获取文件列表 */\r\n    path = path.substr(0, path.lastIndexOf(\"/\"));\r\n    var files = this.scanFolder(path).files;\r\n    if (files.length == 0) {\r\n      return {\r\n        \"state\": \"no match file\",\r\n        \"list\": [],\r\n        \"start\": start,\r\n        \"total\": files.length\r\n      }\r\n    }\r\n    /* 获取指定范围的列表 */\r\n    var len = files.length;\r\n    var files_n = [];\r\n    for (let i = 0; i < len; i++) {\r\n      var t = files[i].substr(files[i].lastIndexOf(\".\")).toLocaleLowerCase();\r\n      if (allowFiles.includes(t)) {\r\n        files_n.push(files[i])\r\n      }\r\n    }\r\n\r\n    var lenn = files_n.length;\r\n    for (let i = Math.min(end, lenn) - 1, list = []; i < lenn && i >= 0 && i >= start; i--) {\r\n      var f = files_n[i];\r\n      list.push({url: f});\r\n    }\r\n\r\n    return {\r\n      \"state\": \"SUCCESS\",\r\n      \"list\": list,\r\n      \"start\": start,\r\n      \"total\": files.length\r\n    };\r\n\r\n  }\r\n\r\n  /**\r\n   * 遍历获取目录下的指定类型的文件\r\n   */\r\n  scanFolder(path) {\r\n    var fileList = [],\r\n      folderList = [],\r\n      walk = function (path, fileList, folderList) {\r\n        let files = fs.readdirSync(think.UPLOAD_PATH + \"/\" + path);\r\n        files.forEach(function (item) {\r\n          var tmpPath = path + '/' + item,\r\n            stats = fs.statSync(think.UPLOAD_PATH + \"/\" + tmpPath);\r\n\r\n          if (stats.isDirectory()) {\r\n            walk(tmpPath, fileList, folderList);\r\n            folderList.push(tmpPath);\r\n          } else {\r\n            fileList.push(tmpPath);\r\n          }\r\n        });\r\n      };\r\n\r\n    walk(path, fileList, folderList);\r\n\r\n    console.log('扫描' + path + '成功');\r\n\r\n    return {\r\n      'files': fileList,\r\n      'folders': folderList\r\n    }\r\n  }\r\n}\r\n"
    ]
}