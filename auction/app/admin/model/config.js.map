{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\model\\config.js"
    ],
    "names": [],
    "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;IACqB;;;;;;;;;;;;gJACnB,SAAS;AACP,cAAQ;AACN,cAAK,MAAL;AACA,kBAAU,IAAV;AACA,iBAAS;iBAAI,MAAM,MAAN,CAAa,MAAb;SAAJ;OAHX;AAKA,gBAAU;AACR,cAAK,IAAL;AACA,kBAAU,IAAV;AACA,iBAAS;iBAAI,IAAI,IAAJ;SAAJ;OAHX;AAKA,gBAAU;AACR,cAAK,IAAL;AACA,kBAAU,IAAV;AACA,iBAAS;iBAAI,IAAI,IAAJ;SAAJ;OAHX;;;;;;;;;;AAZiB,mBAwBb;0FAAI;UACJ,QAGA,MACA;;;;;;qBAJe,KAAK,YAAL;;;AAAf;;oBACA,OAAO,GAAP,IAAc,WAAd;;;;;+CACK;;;AACL,qBAAO,IAAI,KAAJ,CAAU,GAAV;;AACP,0BAAY,SAAZ,SAAY,CAAC,IAAD,EAAO,GAAP,EAAc;AAC5B,oBAAI,KAAK,MAAL,IAAe,CAAf,EAAkB;AACpB,sBAAI,QAAM,KAAK,CAAL,CAAN,CADgB;AAEpB,sBAAI,OAAO,IAAI,KAAJ,CAAP,IAAmB,WAAnB,EAAgC;AAClC,2BAAO,IAAI,KAAJ,CAAP,CADkC;mBAApC;AAGA,uBAAK,KAAL,GALoB;AAMpB,yBAAO,UAAU,IAAV,EAAgB,IAAI,KAAJ,CAAhB,CAAP,CANoB;iBAAtB;AASA,uBAAO,GAAP,CAV4B;eAAd;;+CAYT,UAAU,IAAV,EAAgB,MAAhB;;;;;;;;;;;;;;;;;;;;;;;;;AAzCU,mBAkDb;2FAAI,KAAK;;;UAIT;;;;;;kBAHC;;;;;;;;AAGD;;oBACA,QAAO,+DAAP,IAAc,QAAd;;;;;AACF,uBAAS,GAAT;;qBACM,KAAK,IAAL,CAAU,MAAV;;;gDACC;;;;oBAGH,MAEA,WAiBA;;;;;;+BApBW,OAAK,YAAL;;;AAAf;AACI,+BAAO,IAAI,KAAJ,CAAU,GAAV;;AAEP,oCAAY,SAAZ,SAAY,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAmB;AACjC,8BAAI,KAAK,MAAL,IAAe,CAAf,EACF,OADF;;AAGA,8BAAI,MAAM,KAAK,CAAL,CAAN,CAJ6B;AAKjC,8BAAI,KAAK,MAAL,IAAe,CAAf,EAAkB;AACpB,gCAAI,UAAS,IAAI,GAAJ,CAAT,CADgB;AAEpB,gCAAI,GAAJ,IAAW,GAAX,CAFoB;AAGpB,mCAAO,OAAP,CAHoB;2BAAtB,MAIO;AACL,gCAAI,sBAAO,IAAI,GAAJ,EAAP,IAAmB,QAAnB,EAA6B;AAC/B,kCAAI,GAAJ,IAAW,EAAX,CAD+B;6BAAjC;AAGA,iCAAK,KAAL,GAJK;AAKL,mCAAO,UAAU,IAAV,EAAgB,GAAhB,EAAqB,IAAI,GAAJ,CAArB,CAAP,CALK;2BAJP;yBALc;;AAiBZ,iCAAS,UAAU,IAAV,EAAgB,GAAhB,EAAqB,MAArB;;+BACP,OAAK,MAAL,CAAY,MAAZ;;;;6BAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAnFQ,mBA2FnB,uCAAe;AACb,WAAO,KAAK,MAAL,EAAP,CADa;;;;;;;;;;AA3FI,mBAoGb;;UACA,QAEA;;;;;;qBAFe,KAAK,MAAL;;;AAAf;AAEA,8BAAgB,MAAM,MAAN,CAAa,MAAb;;oBAChB,OAAO,MAAP,IAAiB,CAAjB;;;;;;qBACI,KAAK,MAAL;;;;qBACA,KAAK,GAAL,CAAS,EAAC,QAAQ,aAAR,EAAV;;;gDACC;;;gDAEF,OAAO,CAAP,EAAU,MAAV;;;;;;;;;;;;;;;;;SA7GU",
    "file": "..\\..\\..\\src\\admin\\model\\config.js",
    "sourcesContent": [
        "import Base from './base.js'\r\nexport default class config extends Base {\r\n  schema = {\r\n    config: {\r\n      type:Object,\r\n      required: true,\r\n      default: ()=>think.config('site')\r\n    },\r\n    createAt: {\r\n      type:Date,\r\n      required: true,\r\n      default: ()=>new Date()\r\n    },\r\n    updateAt: {\r\n      type:Date,\r\n      required: true,\r\n      default: ()=>new Date()\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param key {String} the path of config, e.g. 'foo.bar' will get config.foo.bar\r\n   * @returns {*} val\r\n   */\r\n  async get(key) {\r\n    let config = await this._getDBConfig();\r\n    if (typeof key == 'undefined')\r\n      return config;\r\n    let keys = key.split('.');\r\n    let objectGet = (keys, obj)=> {\r\n      if (keys.length != 0) {\r\n        let key = keys[0];\r\n        if (typeof obj[key] == 'undefined') {\r\n          return obj[key];\r\n        }\r\n        keys.shift();\r\n        return objectGet(keys, obj[key]);\r\n\r\n      }\r\n      return obj;\r\n    };\r\n    return objectGet(keys, config);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param key {String} the path of config, e.g. 'foo.bar' indicates config.foo.bar\r\n   * @param val {*} value of setting\r\n   * @returns {*} old value\r\n   */\r\n  async set(key, val) {\r\n    if (!key) {\r\n      return;\r\n    }\r\n    let config;\r\n    if (typeof key == 'object') {\r\n      config = key;\r\n      await this.save(config);\r\n      return config;\r\n    } else {\r\n      config = await this._getDBConfig();\r\n      let keys = key.split('.');\r\n\r\n      let objectSet = (keys, val, obj)=> {\r\n        if (keys.length == 0)\r\n          return;\r\n\r\n        let key = keys[0];\r\n        if (keys.length == 1) {\r\n          let oldVal = obj[key];\r\n          obj[key] = val;\r\n          return oldVal;\r\n        } else {\r\n          if (typeof obj[key] != 'object') {\r\n            obj[key] = {};\r\n          }\r\n          keys.shift();\r\n          return objectSet(keys, val, obj[key]);\r\n        }\r\n      };\r\n      let oldVal = objectSet(keys, val, config);\r\n      await this.update(config);\r\n\r\n      return oldVal;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * set all config to default\r\n   * @returns {Promise}\r\n   */\r\n  setToDefault() {\r\n    return this.delete();\r\n  }\r\n\r\n  /**\r\n   * if db is empty, it will auto save default config into db, which locals in common/config/site.js\r\n   * @returns {*} config in db\r\n   * @private\r\n   */\r\n  async _getDBConfig() {\r\n    let config = await this.select();\r\n\r\n    let defaultConfig = think.config('site');\r\n    if (config.length != 1) {\r\n      await this.delete();\r\n      await this.add({config: defaultConfig});\r\n      return defaultConfig;\r\n    }\r\n    return config[0].config;\r\n  }\r\n}"
    ]
}