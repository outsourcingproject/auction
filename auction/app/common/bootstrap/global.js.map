{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\common\\bootstrap\\global.js"
    ],
    "names": [],
    "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAcA,IAAI,UAAU,QAAQ,SAAR,CAAV;;AAEJ,IAAI,UAAU,IAAI,OAAJ,EAAV;;AAEJ,QAAQ,UAAR;;AAGA,IAAI;uEAAgB;QAEd,oBACA,+CAEK,WACH;;;;;;AAJF,iCAAqB,MAAM,MAAN,CAAa,yBAAb;AACrB,6BAAiB,MAAM,KAAN,CAAY,WAAZ,EAAyB,IAAzB,EAA+B,MAA/B;wBAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAb;;mBACY,eAAe,KAAf,CAAqB,EAAC,MAAM,UAAU,IAAV,EAA5B,EAA6C,IAA7C;;;AAAf;;iBACA,MAAM,OAAN,CAAc,MAAd;;;;;;mBACI,eAAe,YAAf,CAA4B,UAAU,IAAV,EAAgB,UAAU,IAAV,EAAgB,UAAU,KAAV;;;;;;;;;;;;GARpD;kBAAhB;;;GAAJ;AAYA,IAAI;uEAAW;QAET,cACA,8CAEK,MACH;;;;;;AAJF,2BAAe,MAAM,MAAN,CAAa,mBAAb;AACf,wBAAY,MAAM,KAAN,CAAY,MAAZ,EAAoB,IAApB,EAA0B,MAA1B;yBAEC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAR;;mBACY,UAAU,KAAV,CAAgB,EAAC,MAAM,KAAK,IAAL,EAAvB,EAAmC,IAAnC;;;AAAf;;iBACA,MAAM,OAAN,CAAc,MAAd;;;;;;mBACI,UAAU,OAAV,CAAkB,KAAK,IAAL,EAAW,KAAK,IAAL,EAAW,KAAK,MAAL,EAAa,KAAK,WAAL;;;;;;;;;;;;GARlD;kBAAX;;;GAAJ;;AAaA,MAAM,cAAN,GAAuB,UAAC,MAAD,EAAW;AAChC,SAAO,MAAM,QAAN,CAAe,MAAf,KAA0B,OAAO,KAAP,CAAa,eAAb,CAA1B,CADyB;CAAX;AAGvB,MAAM,OAAN,GAAc,OAAd;;;AAGA,gBAAgB,IAAhB;AACA,WAAW,IAAX;;AAEA,OAAO,aAAP,GAAuB,UAAC,GAAD,EAAQ;AAC7B,SAAO,IAAI,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAP;AAD6B,CAAR",
    "file": "..\\..\\..\\src\\common\\bootstrap\\global.js",
    "sourcesContent": [
        "/**\r\n * this file will be loaded before server started\r\n * you can define global functions used in controllers, models, templates\r\n */\r\n\r\n/**\r\n * use global.xxx to define global functions\r\n *\r\n * global.fn1 = function(){\r\n *     \r\n * }\r\n */\r\n\r\n// 载入模块\r\nvar Segment = require('segment');\r\n// 创建实例\r\nvar segment = new Segment();\r\n// 使用默认的识别模块及字典，载入字典文件需要1秒，仅初始化时执行一次即可\r\nsegment.useDefault();\r\n\r\n\r\nlet initAuthority = async()=> {\r\n  \"use strict\";\r\n  let defaultAuthorities = think.config('site.defaultAuthorities');\r\n  let authorityModel = think.model('authority', null, 'home');\r\n\r\n  for (let authority of defaultAuthorities) {\r\n    let result = await authorityModel.where({name: authority.name}).find();\r\n    if (think.isEmpty(result)) {\r\n      await authorityModel.addAuthority(authority.name, authority.desc, authority.paths);\r\n    }\r\n  }\r\n};\r\nlet initRole = async()=> {\r\n  \"use strict\";\r\n  let defaultRoles = think.config('site.defaultRoles');\r\n  let roleModel = think.model('role', null, 'home');\r\n\r\n  for (let role of defaultRoles) {\r\n    let result = await roleModel.where({name: role.name}).find();\r\n    if (think.isEmpty(result)) {\r\n      await roleModel.addRole(role.name, role.desc, role.extend, role.authorities);\r\n    }\r\n  }\r\n};\r\n\r\nthink.isStringExpReg = (string)=> {\r\n  return think.isRegExp(string) || string.match(/^\\/[\\w\\W]+\\/$/);\r\n};\r\nthink.segment=segment;\r\n\r\n//Promise.all([initAuthority(), initRole()]).then();\r\ninitAuthority().then();\r\ninitRole().then();\r\n\r\nglobal.removeHTMLTag = (str)=> {\r\n  return str.replace(/<[^>]+>/g, \"\");//去掉所有的html标记\r\n};"
    ]
}